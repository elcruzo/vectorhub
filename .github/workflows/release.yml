name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        
    - name: Install Go tools
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        
    - name: Download dependencies
      run: go mod download
      
    - name: Generate protobuf
      run: make proto
      
    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 make build
        mv bin/vectorhub bin/vectorhub-linux-amd64
        
        GOOS=linux GOARCH=arm64 make build  
        mv bin/vectorhub bin/vectorhub-linux-arm64
        
        GOOS=darwin GOARCH=amd64 make build
        mv bin/vectorhub bin/vectorhub-darwin-amd64
        
        GOOS=darwin GOARCH=arm64 make build
        mv bin/vectorhub bin/vectorhub-darwin-arm64
        
        GOOS=windows GOARCH=amd64 make build
        mv bin/vectorhub bin/vectorhub-windows-amd64.exe
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/vectorhub-*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: elcruzo/vectorhub
        tags: |
          type=ref,event=tag
          type=raw,value=latest
          
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}